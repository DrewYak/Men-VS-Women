local CELL_SIZE = 100
local SPEED = 300

local SPRITE_NAME		= ""
local ATTACK_ANIM_NAME 	= ""
local DIE_ANIM_NAME 	= ""
local HURT_ANIM_NAME 	= ""
local IDLE_ANIM_NAME 	= ""
local RUN_ANIM_NAME 	= ""

function init(self)
	--Получаем имя игрового объекта 
	--(имя персонажа: ma, mp, mw, wa, wp, ww)
	--и далее используем это имя для вызова анимаций.
	local go_name 		= string.sub(tostring(msg.url().path), 9, 10)
	SPRITE_NAME 		= "#" .. go_name .. "_sprite"
	ATTACK_ANIM_NAME 	= go_name:upper() .. "_ATTACK"
	DIE_ANIM_NAME 		= go_name:upper() .. "_DIE"
	HURT_ANIM_NAME 		= go_name:upper() .. "_HURT"
	IDLE_ANIM_NAME 		= go_name:upper() .. "_IDLE"
	RUN_ANIM_NAME 		= go_name:upper() .. "_RUN"
	print(RUN_ANIM_NAME)
	--ВАЖНО! 
	--Названия спрайтов и анимаций спрайтов не изменять! 
		
	local p = go.get_position()
	self.dest_p_x = p.x
	self.dest_p_y = p.y

	self.is_selected = false
	msg.post("#circle_sprite", "disable")

	self.is_moving = false
	sprite.play_flipbook(SPRITE_NAME, IDLE_ANIM_NAME)
	msg.post(".", "acquire_input_focus")
end

function on_input(self, action_id, action)
	if action_id == hash("select_character") and action.pressed and not self.is_moving then
		local p, mouse_x, mouse_y = go.get_position(), action.x, action.y
		if (math.abs(mouse_x - p.x) < CELL_SIZE / 2) and 
		(math.abs(mouse_y - p.y) < CELL_SIZE / 2) then
			self.is_selected = true
			msg.post("#circle_sprite", "enable")
		else
			self.is_selected = false
			msg.post("#circle_sprite", "disable")
		end
	end

	if self.is_selected and action_id == hash("move_character") and action.pressed then
		local mouse_x, mouse_y = action.x, action.y
		-- dtx означает destination tile x
		-- dty означает destination tile y
		local dtx, dty = math.floor(mouse_x / 100), math.floor(mouse_y / 100)
		if dtx >= 0 and dtx <= 7 and dty >= 0 and dty <= 7 then
			self.dest_p_x = CELL_SIZE / 2 + dtx * 100
			self.dest_p_y = CELL_SIZE / 2 + dty * 100
			self.is_moving = true
			sprite.play_flipbook(SPRITE_NAME, RUN_ANIM_NAME)
		end
	
		self.is_selected = false
		msg.post("#circle_sprite", "disable")
	end		
end

function update(self, dt)
	local p = go.get_position()
	local direction_x, direction_y = 1, 1
	if self.dest_p_x - p.x < 0 then direction_x = -1 end
	if self.dest_p_y - p.y < 0 then direction_y = -1 end
	
	-- eps означает "эпсилон", то есть некоторую малую величину
	local eps = 1
	local delta_x = math.abs(self.dest_p_x - p.x)
	local delta_y = math.abs(self.dest_p_y - p.y)
	if self.is_moving then
		if delta_x >= eps then
			p.x = p.x + SPEED * direction_x * dt
		elseif delta_x > 0 and delta_x < eps then
			p.x = self.dest_p_x
		else
			if delta_y >= eps then
				p.y = p.y + SPEED * direction_y * dt
			else
				p.y = self.dest_p_y
				self.is_moving = false
				sprite.play_flipbook(SPRITE_NAME, IDLE_ANIM_NAME)
				end
		end
	end
				
	go.set_position(p)
end

function final(self)
	msg.post(".", "release_input_focus")
end